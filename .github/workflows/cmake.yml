name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup: 
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends gcc-11 g++-11 libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev
      - name: Setup gcc version
        run: echo "CC=gcc-11" >> $GITHUB_ENV && echo "CXX=g++-11" >> $GITHUB_ENV
      
  build:
    needs: 
      setup
      
    runs-on: ${{ matrix.os }}
    
    strategy: 
      fail-fast: false
      matrix:
        build_type: [ 'Release', 'Debug', 'RelWithDebInfo' ]
        os: [ windows-latest, ubuntu-latest ]

    steps:
    - uses: actions/checkout@v2

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      env:
        CC: gcc-11
        CXX: g++-11
      if: runner.os != 'Windows'
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build_type }}

    # No testing for now
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ matrix.build_type }} -T test --output-on-failure
